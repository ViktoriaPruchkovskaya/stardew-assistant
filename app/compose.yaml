services:
  app:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      - mongo
      - cache
    environment:
      DB_NAME: ${DB_NAME}
      DB_HOST: mongo
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: cache
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      API_VERSION: ${API_VERSION}
      ENDPOINT: ${ENDPOINT}
      SUBSCRIPTION_KEY: ${SUBSCRIPTION_KEY}
      DEPLOYMENT: ${DEPLOYMENT}
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_ADMIN_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_ADMIN_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${DB_USERNAME}:${DB_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
  cache:
    image: redis:8.0.2-alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache:/data
  redis-cli:
    image: redis:8.0.2-alpine
    depends_on:
      - cache
    entrypoint: [ "tail", "-f", "/dev/null" ]
volumes:
  cache:
    driver: local
